---
import { getLocale, getPath, locales } from '~/utils/i18n'

const currentLocale = getLocale(Astro)
const currentPath = Astro.url.pathname

const localeNames = {
  en: 'English',
  zh: 'Chinese',
  es: 'Español',
  fr: 'Français',
  de: 'Deutsch',
  ja: 'Japanese',
} as const

const getLocaleName = (locale: string): string =>
  localeNames[locale as keyof typeof localeNames] || locale.toUpperCase()

const localeOptions = locales.map(locale => ({
  locale,
  name: getLocaleName(locale),
  path: getPath(locale)(currentPath),
  isActive: locale === currentLocale,
}))

const { class: className, isDark, ...props } = Astro.props
---

<div class="relative inline-block">
  <select
    id="locale-dropdown"
    aria-label="Select language"
    class:list={[
      'cursor-pointer rounded-xl border px-4 py-2 text-base transition hover:border-coral focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',
      className,
      isDark ? 'border-dark bg-dark text-paper' : 'border-paper bg-paper text-dark',
    ]}
    {...props}
  >
    {
      localeOptions.map(({ locale, name, path, isActive }) => (
        <option value={path} selected={isActive}>
          {name}
        </option>
      ))
    }
  </select>
</div>

<script>
  const dropdown = document.getElementById('locale-dropdown') as HTMLSelectElement

  if (dropdown) {
    dropdown.addEventListener('change', event => {
      const target = event.target as HTMLSelectElement
      const selectedPath = target.value

      if (selectedPath) {
        window.location.href = selectedPath
      }
    })
  }
</script>
